
       TITLE '  MIS0515B: SPLIT PX ADHOC REPORTS'.
       IDENTIFICATION DIVISION.
       PROGRAM-ID.    MIS0515B.
      ******************************************************************
      *@@@ II SPLIT PX ADHOC REPORTS INTO 4 FILES
      ******************************************************************
      *
      *  I AM INTERESTED IN KNOWING IF/WHERE THESE PROGRAMS
      *  ARE IN USE.     EMAIL:  jiannon@me.com
      *
      ******************************************************************
      * DATE WRITTEN: 10/11/96
      * AUTHOR      : JIM IANNONE
      *               READ THE ADHOC SCHEDULE FILE AND DISTRIBUTE THE
      *               PX ADHOCS INTO 9 SEPARATE FILES FOR
      *               INPUT TO PAP19A6$ AND PXADHOCZ
      ******************************************************************
      * DATE CHANGED: 05/21/2001
      * AUTHOR      : JIM IANNONE
      *               ADD LIST OF ALLOWABLE ADHOCS.  ALL OTHERS ARE
      *               SENT TO THE 'Z' FILES, AND A WARNING MESSAGE
      *               IS SENT OUT TO TSO USERS.
      ******************************************************************
      * DATE CHANGED: 06/14/2001
      * AUTHOR      : JIM IANNONE
      *               ADD PXADHA6W
      ******************************************************************
      * DATE CHANGED: 05/08/2003
      * AUTHOR      : JIM IANNONE
      *               ADD PXADHA6S
      ******************************************************************
      * DATE CHANGED: 06/30/2004
      * AUTHOR      : JIM IANNONE
      *               ALTER FOR NEW A7 REGION
      ******************************************************************
      * DATE CHANGED: 09/22/2006
      * AUTHOR      : JIM IANNONE
      *               ADD TIFFIN AND WILLARD, ALLEN AND LORAIN
      ******************************************************************

       ENVIRONMENT DIVISION.

       CONFIGURATION SECTION.
       SPECIAL-NAMES.
       INPUT-OUTPUT SECTION.
       FILE-CONTROL.

           SELECT INFILE               ASSIGN TO INFILE
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT PARM01               ASSIGN TO PARM01
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUT9A                ASSIGN TO OUT9A
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUT9B                ASSIGN TO OUT9B
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUT9C                ASSIGN TO OUT9C
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUT9D                ASSIGN TO OUT9D
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTZA                ASSIGN TO OUTZA
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTZB                ASSIGN TO OUTZB
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTZC                ASSIGN TO OUTZC
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTSA                ASSIGN TO OUTSA
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTSB                ASSIGN TO OUTSB
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTSC                ASSIGN TO OUTSC
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTWA                ASSIGN TO OUTWA
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTWB                ASSIGN TO OUTWB
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTWC                ASSIGN TO OUTWC
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTFA                ASSIGN TO OUTFA
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTMA                ASSIGN TO OUTMA
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT OUTAA                ASSIGN TO OUTAA
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

           SELECT NOTIF01              ASSIGN TO NOTIF01
                                       ORGANIZATION IS SEQUENTIAL
                                       ACCESS MODE IS SEQUENTIAL
                                       FILE STATUS IS WS-STAT.

       DATA DIVISION.
       FILE SECTION.

       FD  INFILE
           RECORDING MODE F
           BLOCK CONTAINS 0.
       01  INFILE-RECORD.
         02  INFILE-RCD.
           05  INFILE-NBR1             PIC  X.
           05  INFILE-KEY.
               10  INFILE-HOSP         PIC  XX.
               10  INFILE-SCHED        PIC  X(04).
           05  INFILE-DY-WM            PIC  XX.
           05  FILLER                  PIC  X(04).
           05  INFILE-1-MDY            PIC  X(06).
           05  FILLER                  PIC  X(04).
           05  INFILE-2-MDY            PIC  X(06).
           05  FILLER                  PIC  X(51).
         02  INFILE-RCD2 REDEFINES INFILE-RCD.
           05  FILLER                  PIC  X(13).
           05  INFILE-RPT              PIC  X(08).
           05  FILLER                  PIC  X(13).
           05  INFILE-REGN             PIC  XX.
           05  INFILE-FLAG1            PIC  X.
           05  INFILE-FLAG2            PIC  X.
           05  INFILE-FLAG3            PIC  X.
           05  INFILE-FLAG4            PIC  X.
           05  INFILE-FLAG5            PIC  X.
           05  FILLER                  PIC  X(38).
           05  INFILE-CNT              PIC  X.

       FD  PARM01
           RECORDING MODE F.
       01  PARM01-RECORD.
           05  PARM01-FLAG             PIC  X.
           05  FILLER                  PIC  X.
           05  PARM01-ADHOC            PIC  X(08).
           05  FILLER                  PIC  X.
           05  PARM01-JOB              PIC  X.
           05  FILLER                  PIC  X.
           05  PARM01-LONG             PIC  XXX.
           05  FILLER                  PIC  X.
           05  PARM01-DY-WM            PIC  XXX.
           05  FILLER                  PIC  X(52).
           05  FILLER                  PIC  X(08).

       FD  OUT9A
           RECORDING MODE F.
       01  OUT9A-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUT9B
           RECORDING MODE F.
       01  OUT9B-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUT9C
           RECORDING MODE F.
       01  OUT9C-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUT9D
           RECORDING MODE F.
       01  OUT9D-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTZA
           RECORDING MODE F.
       01  OUTZA-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTZB
           RECORDING MODE F.
       01  OUTZB-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTZC
           RECORDING MODE F.
       01  OUTZC-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTSA
           RECORDING MODE F.
       01  OUTSA-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTSB
           RECORDING MODE F.
       01  OUTSB-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTSC
           RECORDING MODE F.
       01  OUTSC-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTWA
           RECORDING MODE F.
       01  OUTWA-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTWB
           RECORDING MODE F.
       01  OUTWB-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTWC
           RECORDING MODE F.
       01  OUTWC-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTFA
           RECORDING MODE F.
       01  OUTFA-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTMA
           RECORDING MODE F.
       01  OUTMA-RECORD.
           05  FILLER                  PIC X(80).

       FD  OUTAA
           RECORDING MODE F.
       01  OUTAA-RECORD.
           05  FILLER                  PIC X(80).

       FD  NOTIF01
           RECORDING MODE F.
       01  NOTIF01-RECORD.
           05  NOTIF01-SE              PIC  XXX.
           05  NOTIF01-QUOTE1          PIC  X.
           05  NOTIF01-FILL1           PIC  X.
           05  NOTIF01-MSG             PIC  X(40).
           05  NOTIF01-FILL2           PIC  X.
           05  NOTIF01-QUOTE2          PIC  X.
           05  NOTIF01-REMAIN          PIC  X(33).

       WORKING-STORAGE SECTION.

       01  WS-START.
           05  FILLER                  PIC  X(32)    VALUE
               ' WORKING STORAGE MIS0515B START '.

       01  WS-WORK-FIELDS.
           05  WS-STAT                 PIC  99       VALUE ZERO.
           05  WS-RETURN-CODE          PIC S9(04)    VALUE ZERO COMP.
           05  WS-PARM01-MAX           PIC  9(05)    VALUE ZERO.
           05  WS-1-CYMD               PIC  X(08)    VALUE '00000000'.
           05  FILLER REDEFINES WS-1-CYMD.
               10  WS-1-CYMD-CC        PIC  XX.
               10  WS-1-CYMD-YY        PIC  XX.
               10  WS-1-CYMD-MM        PIC  XX.
               10  WS-1-CYMD-DD        PIC  XX.
           05  WS-NBR1                 PIC  999      VALUE ZERO.
           05  WS-NBR2                 PIC  999      VALUE ZERO.
           05  WS-NBR1-M               PIC  999      VALUE ZERO.
           05  WS-NBR2-M               PIC  999      VALUE ZERO.
           05  WS-NBR-Z1               PIC  999      VALUE ZERO.
           05  WS-NBR-Z2               PIC  999      VALUE ZERO.
           05  WS-NBR-W1               PIC  999      VALUE ZERO.
           05  WS-NBR-W2               PIC  999      VALUE ZERO.
           05  WS-NBR-S1               PIC  999      VALUE ZERO.
           05  WS-NBR-S2               PIC  999      VALUE ZERO.
           05  WS-HOLD-NBR2            PIC  999      VALUE ZERO.
           05  WS-HOLD-NBR2-M          PIC  999      VALUE ZERO.
           05  WS-DIFF                 PIC  999      VALUE ZERO.
           05  WS-HOLD-HDR             PIC  X(80)    VALUE SPACE.
           05  WS-MOVED                PIC  X(12)    VALUE SPACE.
           05  WS-PREV-HOSP            PIC  XX       VALUE SPACE.
           05  WS-JOB-VAL              PIC  X        VALUE SPACE.
           05  WS-LONG-VAL             PIC  XXX      VALUE SPACE.
           05  WS-DY-WM-VAL            PIC  XXX      VALUE SPACE.
           05  WS-CALL-STV0400B        PIC  X(08)    VALUE 'STV0400B'.

       01  WS-COUNT-FIELDS             COMP-3.
           05  WS-READ-RCD-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-9A-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-9B-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-9C-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-9D-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-ZA-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-ZB-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-ZC-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-WA-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-WB-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-WC-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-SA-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-SB-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-SC-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-FA-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-MA-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-AA-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-9-CNT          PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-Z-CNT          PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-W-CNT          PIC S9(05)    VALUE ZERO.
           05  WS-WRITE-S-CNT          PIC S9(05)    VALUE ZERO.
           05  WS-ADHOC-CNT            PIC S9(05)    VALUE ZERO.
           05  WS-HOLD-RCD-CNT         PIC S9(05)    VALUE ZERO.
           05  WS-PARM-CNT             PIC S9(05)    VALUE ZERO.
           05  WS-NOTIF01-CNT          PIC S9(05)    VALUE ZERO.

       01  WS-SWITCHES.
           05  WS-END-INFILE-SW        PIC  X        VALUE 'N'.
               88  END-OF-INFILE                     VALUE 'Y'.
               88  MORE-INFILE-RCDS                  VALUE 'N'.
           05  WS-MONTHEND-SW          PIC  X        VALUE SPACE.
               88  MONTHEND                          VALUE 'Y'.
           05  WS-FIRST-RCD-SW         PIC  X        VALUE 'Y'.
               88  FIRST-RECORD                      VALUE 'Y'.
           05  WS-2ND-SW               PIC  X        VALUE SPACE.
           05  WS-HD9A-SW              PIC  X        VALUE SPACE.
           05  WS-HD9B-SW              PIC  X        VALUE SPACE.
           05  WS-HD9C-SW              PIC  X        VALUE SPACE.
           05  WS-HD9D-SW              PIC  X        VALUE SPACE.
           05  WS-HDZA-SW              PIC  X        VALUE SPACE.
           05  WS-HDZB-SW              PIC  X        VALUE SPACE.
           05  WS-HDZC-SW              PIC  X        VALUE SPACE.
           05  WS-HDWA-SW              PIC  X        VALUE SPACE.
           05  WS-HDWB-SW              PIC  X        VALUE SPACE.
           05  WS-HDWC-SW              PIC  X        VALUE SPACE.
           05  WS-HDSA-SW              PIC  X        VALUE SPACE.
           05  WS-HDSB-SW              PIC  X        VALUE SPACE.
           05  WS-HDSC-SW              PIC  X        VALUE SPACE.
           05  WS-HDFA-SW              PIC  X        VALUE SPACE.
           05  WS-HDMA-SW              PIC  X        VALUE SPACE.
           05  WS-HDAA-SW              PIC  X        VALUE SPACE.
           05  WS-ADJ-SW               PIC  X        VALUE 'Y'.
           05  WS-ADHOC-SW             PIC  X        VALUE 'N'.

      *    YEAR 2000 COMPATIBLE DATE ROUTINE
       01  WS-STV0400B-FIELDS.
           05  STV0400B-DATA           PIC  X(10)   VALUE SPACE.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-ERROR      PIC  X(06).
               10  STV0400B-NBR        PIC  X(04).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-CYMD       PIC  X(08).
               10  FILLER              PIC  XX.
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAYS       PIC  X(05).
               10  FILLER              PIC  X(05).
           05  FILLER REDEFINES STV0400B-DATA.
               10  STV0400B-DAY        PIC  X(09).
               10  STV0400B-DAY-NBR    PIC  X.
           05  STV0400B-DATA2          PIC  X(10)   VALUE SPACE.
           05  STV0400B-IN             PIC  X(06)   VALUE SPACE.
           05  STV0400B-OUT            PIC  X(06)   VALUE SPACE.

       01  WS-SUBSCRIPTS               COMP.
           05  WS-SUB1                 PIC S9(05)    VALUE ZERO.
           05  WS-SUB2                 PIC S9(05)    VALUE ZERO.

       01  WS-TABLES.
           05  WS-ADHOC-TABLE                       VALUE SPACE.
               10  WS-ADHOC-FIELD      OCCURS 300 TIMES.
                   15  WS-ADHOC        PIC  X(08).
                   15  WS-JOB          PIC  X.
                   15  WS-LONG         PIC  XXX.
                   15  WS-DY-WM        PIC  XXX.
           05  WS-USER-TABLE                        VALUE SPACE.
               10  WS-USERID           PIC  X(10)
                                       OCCURS 20 TIMES.

       01  WS-END.
           05  FILLER                  PIC  X(16)    VALUE
               '  MIS0515B END  '.

       LINKAGE SECTION.

       01  PARM-FIELD.
           05  PARM-LENGTH             PIC S9(04)    COMP.
           05  PARM-NBR1               PIC  XXX.
           05  PARM-NBR2               PIC  XXX.
           05  PARM-NBR1-M             PIC  XXX.
           05  PARM-NBR2-M             PIC  XXX.
           05  PARM-NBR-Z1             PIC  XXX.
           05  PARM-NBR-S1             PIC  XXX.
           05  PARM-NBR-W1             PIC  XXX.

      /
       PROCEDURE DIVISION USING PARM-FIELD.

       0100-PROGRAM-ENTRY.
           PERFORM 0200-OPEN-FILES.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0400-LOAD-PARM01 THRU
                       0400-LOAD-PARM01-EXIT.
           IF WS-RETURN-CODE = ZERO
               PERFORM 0400-PROCESS-INFILE.

           DISPLAY '**** RECORDS IN INFILE      ' WS-READ-RCD-CNT.
           IF MONTHEND
               DISPLAY '**** MONTHEND VALUES USED '.
           DISPLAY '**** NBR1                   ' WS-NBR1.
           IF MONTHEND
               DISPLAY '**** NBR2                   ' WS-HOLD-NBR2-M
           ELSE
               DISPLAY '**** NBR2                   ' WS-HOLD-NBR2.
           DISPLAY '**** A6T/A7D/A8L NBR        ' WS-NBR-Z1.
           DISPLAY '**** PXADHA7S    NBR        ' WS-NBR-S1.
           DISPLAY '**** PXADHA7W    NBR        ' WS-NBR-W1.
           DISPLAY '****'.
           DISPLAY '**** PAP19RR$    #1         ' WS-WRITE-9A-CNT.
           DISPLAY '****             #2         ' WS-WRITE-9B-CNT.
           DISPLAY '****             #3         ' WS-WRITE-9C-CNT.
           DISPLAY '****             #4         ' WS-WRITE-9D-CNT.
           DISPLAY '**** A6T/A7D/A8L #1         ' WS-WRITE-ZA-CNT.
           DISPLAY '****             #2         ' WS-WRITE-ZB-CNT.
           DISPLAY '****             #3         ' WS-WRITE-ZC-CNT.
           DISPLAY '**** PXADHA7S    #1         ' WS-WRITE-SA-CNT.
           DISPLAY '****             #2         ' WS-WRITE-SB-CNT.
           DISPLAY '****             #3         ' WS-WRITE-SC-CNT.
           DISPLAY '**** PXADHA7W    #1         ' WS-WRITE-WA-CNT.
           DISPLAY '****             #2         ' WS-WRITE-WB-CNT.
           DISPLAY '****             #3         ' WS-WRITE-WC-CNT.
           DISPLAY '**** PXADHA7F    #1         ' WS-WRITE-FA-CNT.
           DISPLAY '**** PXADHA7M    #1         ' WS-WRITE-MA-CNT.
           DISPLAY '**** PXADHA8A    #1         ' WS-WRITE-AA-CNT.
           DISPLAY '****'.
           DISPLAY '**** SCHEDULED ADHOCS       ' WS-ADHOC-CNT.
           DISPLAY '****'.
           DISPLAY '**** ALLOWABLE ADHOCS       ' WS-PARM-CNT.
           DISPLAY '**** USER NOTIFICATIONS     ' WS-NOTIF01-CNT.
           DISPLAY '**** MIS0515B EOJ ENCOUNTERED '.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0300-CLOSE-FILES
           ELSE
               DISPLAY '**** MIS0515B COND CODE ' WS-RETURN-CODE
                       ' SENT BY PROGRAM'
               MOVE WS-RETURN-CODE            TO RETURN-CODE.

           STOP RUN.

       0200-OPEN-FILES.
           OPEN INPUT  INFILE.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON INFILE'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0200                     TO WS-RETURN-CODE.
           OPEN INPUT  PARM01.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON INFILE'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0201                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUT9A.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUT9A'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0202                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUT9B.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUT9B'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0203                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUT9C.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUT9C'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0204                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUT9D.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUT9D'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0204                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTZA.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTZA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0205                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTZB.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTZB'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0206                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTZC.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTZC'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0207                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTWA.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTWA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0208                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTWB.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTWB'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0209                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTWC.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTWC'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0211                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTSA.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTSA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0212                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTSB.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTSB'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0213                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTSC.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTSC'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0214                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTFA.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTFA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0215                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTMA.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTMA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0216                     TO WS-RETURN-CODE.
           OPEN OUTPUT OUTAA.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON OUTAA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0217                     TO WS-RETURN-CODE.
           OPEN OUTPUT NOTIF01.
           IF WS-STAT NOT = ZERO
               DISPLAY '**** MIS0515B OPEN ERROR ON NOTIF01'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0218                     TO WS-RETURN-CODE.

       0300-CLOSE-FILES.
           CLOSE NOTIF01.
           CLOSE OUTAA.
           CLOSE OUTMA.
           CLOSE OUTFA.
           CLOSE OUTSC.
           CLOSE OUTSB.
           CLOSE OUTSA.
           CLOSE OUTWC.
           CLOSE OUTWB.
           CLOSE OUTWA.
           CLOSE OUTZC.
           CLOSE OUTZB.
           CLOSE OUTZA.
           CLOSE OUT9D.
           CLOSE OUT9C.
           CLOSE OUT9B.
           CLOSE OUT9A.
           CLOSE INFILE.
           CLOSE PARM01.

      *---------------------------------------
      *    LOAD PARM01 - LIST OF ALLOWABLE ADHOCS
      *---------------------------------------
       0400-LOAD-PARM01.
           READ PARM01.
           IF WS-STAT = 10
               MOVE WS-SUB1                   TO WS-PARM01-MAX
               GO TO 0400-LOAD-PARM01-EXIT
           ELSE
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B READ ERROR ON PARM01'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0400                     TO WS-RETURN-CODE
               GO TO 0400-LOAD-PARM01-EXIT.

           IF PARM01-FLAG = '*'
               GO TO 0400-LOAD-PARM01.
           IF PARM01-FLAG = 'A'
               IF WS-SUB1 < 300
                   ADD 1                      TO WS-SUB1
                   ADD 1                      TO WS-PARM-CNT
                   MOVE PARM01-ADHOC          TO WS-ADHOC(WS-SUB1)
                   MOVE PARM01-JOB            TO WS-JOB(WS-SUB1)
                   MOVE PARM01-LONG           TO WS-LONG(WS-SUB1)
                   MOVE PARM01-DY-WM          TO WS-DY-WM(WS-SUB1).
           IF PARM01-FLAG = 'U'
               IF WS-SUB2 < 20
                   ADD 1                      TO WS-SUB2
                   MOVE PARM01-ADHOC          TO WS-USERID(WS-SUB2).
           GO TO 0400-LOAD-PARM01.

       0400-LOAD-PARM01-EXIT. EXIT.

       0400-PROCESS-INFILE.
           IF PARM-NBR1 NUMERIC
               MOVE PARM-NBR1                 TO WS-NBR1
           ELSE
               DISPLAY '**** MIS0515B NBR1 NOT NUMERIC '
               MOVE +0400                     TO WS-RETURN-CODE.
           IF PARM-NBR2 NUMERIC
               MOVE PARM-NBR2                 TO WS-HOLD-NBR2
           ELSE
               DISPLAY '**** MIS0515B NBR2 NOT NUMERIC '
               MOVE +0400                     TO WS-RETURN-CODE.

           IF PARM-NBR1-M NUMERIC
               MOVE PARM-NBR1-M               TO WS-NBR1-M
           ELSE
               DISPLAY '**** MIS0515B MONTHEND NBR1 NOT NUMERIC '
               MOVE +0400                     TO WS-RETURN-CODE.
           IF PARM-NBR2-M NUMERIC
               MOVE PARM-NBR2-M               TO WS-HOLD-NBR2-M
           ELSE
               DISPLAY '**** MIS0515B MONTHEND NBR2 NOT NUMERIC '
               MOVE +0400                     TO WS-RETURN-CODE.
           IF PARM-NBR-Z1 NUMERIC
               MOVE PARM-NBR-Z1               TO WS-NBR-Z1
               COMPUTE WS-NBR-Z2 = WS-NBR-Z1 + WS-NBR-Z1
           ELSE
               DISPLAY '**** MIS0515B ADHOC Z PARM NOT NUMERIC '
               MOVE +0400                     TO WS-RETURN-CODE.
           IF PARM-NBR-W1 NUMERIC
               MOVE PARM-NBR-W1               TO WS-NBR-W1
               COMPUTE WS-NBR-W2 = WS-NBR-W1 + WS-NBR-W1
           ELSE
               DISPLAY '**** MIS0515B ADHOC W PARM NOT NUMERIC '
               MOVE +0400                     TO WS-RETURN-CODE.
           IF PARM-NBR-S1 NUMERIC
               MOVE PARM-NBR-S1               TO WS-NBR-S1
               COMPUTE WS-NBR-S2 = WS-NBR-S1 + WS-NBR-S1
           ELSE
               DISPLAY '**** MIS0515B ADHOC S PARM NOT NUMERIC '
               MOVE +0400                     TO WS-RETURN-CODE.
           COMPUTE WS-NBR2 = WS-NBR1 + WS-HOLD-NBR2.
           COMPUTE WS-NBR2-M = WS-NBR1-M + WS-HOLD-NBR2-M.

           MOVE SPACE                         TO WS-STV0400B-FIELDS.
           CALL WS-CALL-STV0400B USING WS-STV0400B-FIELDS.
           MOVE STV0400B-CYMD                 TO WS-1-CYMD.
           IF WS-1-CYMD-DD = '01'
               MOVE 'Y'                       TO WS-MONTHEND-SW
               MOVE WS-NBR1-M                 TO WS-NBR1
               MOVE WS-NBR2-M                 TO WS-NBR2.

           IF WS-RETURN-CODE = ZERO
               PERFORM 0500-READ-INFILE THRU
                       0500-READ-INFILE-EXIT
                       UNTIL END-OF-INFILE.

       0500-READ-INFILE.
           READ INFILE.
           IF WS-STAT = ZERO
               ADD 1                          TO WS-READ-RCD-CNT
               PERFORM 0600-SELECT THRU
                       0600-SELECT-EXIT
           ELSE
           IF WS-STAT = 10
               MOVE 'Y'                       TO WS-END-INFILE-SW
               PERFORM 0700-LAST-HEADERS
           ELSE
               DISPLAY '**** MIS0515B READ ERROR ON INFILE '
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +0500                     TO WS-RETURN-CODE.

       0500-READ-INFILE-EXIT. EXIT.

      ****************************************
      *    WS-WRITE-9-CNT IS THE NUMBER OF ADHOC REPORT PAIRS,
      *      NOT INCLUDING HEADER RECORDS.
      *    # REPORTS IN SPLIT9A = WS-NBR1
      *    # REPORTS IN SPLIT9B = WS-NBR2 MINUS WS-NBR1
      *    # REPORTS IN SPLIT9C = REMAINDER
      *    # REPORTS IN SPLIT9D = LONGER RUNNING ADHOCS
      *+**************************************
       0600-SELECT.
           IF INFILE-SCHED = 'PXEX'
               CONTINUE
           ELSE
               GO TO 0600-SELECT-EXIT.

           IF FIRST-RECORD
               MOVE INFILE-HOSP                TO WS-PREV-HOSP
               MOVE 'N'                        TO WS-FIRST-RCD-SW.

           IF INFILE-NBR1 = '1'
               MOVE INFILE-RECORD              TO WS-HOLD-HDR
               MOVE 'Y'                        TO WS-HD9A-SW
               MOVE 'Y'                        TO WS-HD9B-SW
               MOVE 'Y'                        TO WS-HD9C-SW
               MOVE 'Y'                        TO WS-HD9D-SW
               MOVE 'Y'                        TO WS-HDZA-SW
               MOVE 'Y'                        TO WS-HDZB-SW
               MOVE 'Y'                        TO WS-HDZC-SW
               MOVE 'Y'                        TO WS-HDWA-SW
               MOVE 'Y'                        TO WS-HDWB-SW
               MOVE 'Y'                        TO WS-HDWC-SW
               MOVE 'Y'                        TO WS-HDSA-SW
               MOVE 'Y'                        TO WS-HDSB-SW
               MOVE 'Y'                        TO WS-HDSC-SW
               MOVE 'Y'                        TO WS-HDFA-SW
               MOVE 'Y'                        TO WS-HDMA-SW
               MOVE 'Y'                        TO WS-HDAA-SW
               GO TO 0600-SELECT-EXIT.

           IF INFILE-DY-WM = 'WM'
              IF WS-ADJ-SW = 'Y'
                  PERFORM 0600-ADJUST-FOR-WM
                  MOVE 'N'                    TO WS-ADJ-SW.
           IF INFILE-HOSP NOT = WS-PREV-HOSP
              IF WS-ADJ-SW = 'Y'
                  PERFORM 0600-ADJUST-FOR-HOSP
                  MOVE 'N'                    TO WS-ADJ-SW.
           MOVE 'N'                           TO WS-ADHOC-SW.
           MOVE SPACE                         TO WS-JOB-VAL.
           MOVE SPACE                         TO WS-LONG-VAL.
           MOVE SPACE                         TO WS-DY-WM-VAL.
           PERFORM 0650-SEARCH-ADHOCS
               VARYING WS-SUB1 FROM 1 BY 1
               UNTIL WS-SUB1 > WS-PARM01-MAX
               OR WS-ADHOC-SW = 'Y'.

      *---------------------------------------
      *    A6  :  WRITTEN TO SPLIT9/Z           Z = ST. VINCENTS
      *    A7  :  WRITTEN TO SPLIT9/Z/F/M/S/W   Z = DEFIANCE
      *    A8  :  WRITTEN TO SPLIT9/Z/A         Z = LORAIN
      *---------------------------------------
           IF WS-ADHOC-SW = 'N'
               OR WS-JOB-VAL = 'N'
               IF INFILE-HOSP = 'F0'
                   PERFORM 1500-HANDLE-F-ADHOCS
               ELSE
               IF INFILE-HOSP = 'M0'
                   PERFORM 1500-HANDLE-M-ADHOCS
               ELSE
               IF INFILE-HOSP = 'S0'
                   PERFORM 1500-HANDLE-S-ADHOCS
               ELSE
               IF INFILE-HOSP = 'W0'
                   PERFORM 1500-HANDLE-W-ADHOCS
               ELSE
               IF INFILE-HOSP = 'A0'
                   PERFORM 1500-HANDLE-A-ADHOCS
               ELSE
                   PERFORM 1500-HANDLE-Z-ADHOCS
           ELSE
           IF (WS-LONG-VAL = INFILE-HOSP OR 'ALL')
               AND (WS-DY-WM-VAL = INFILE-DY-WM OR SPACE)
               PERFORM 1400-WRITE-OUT9D
           ELSE
           IF WS-WRITE-9-CNT NOT < WS-NBR2
               PERFORM 1400-WRITE-OUT9C
           ELSE
           IF WS-WRITE-9-CNT NOT < WS-NBR1
               PERFORM 1300-WRITE-OUT9B
           ELSE
               PERFORM 1200-WRITE-OUT9A.

       0600-SELECT-EXIT. EXIT.

       0600-ADJUST-FOR-WM.
           MOVE WS-WRITE-9-CNT                 TO WS-HOLD-RCD-CNT.
           IF WS-HOLD-RCD-CNT < WS-NBR2
             IF WS-HOLD-RCD-CNT < WS-NBR1
                 COMPUTE WS-DIFF = WS-NBR1 - WS-HOLD-RCD-CNT
                 IF WS-DIFF > 6
                     CONTINUE
                 ELSE
                     COMPUTE WS-NBR1 = WS-HOLD-RCD-CNT
                     DISPLAY '**** NBR1 ADJUSTED FOR WM   ' WS-NBR1
             ELSE
                 COMPUTE WS-DIFF = WS-NBR2 - WS-HOLD-RCD-CNT
                 IF WS-DIFF > 6
                     CONTINUE
                 ELSE
                     COMPUTE WS-NBR2 = WS-HOLD-RCD-CNT - WS-NBR1
                     DISPLAY '**** NBR2 ADJUSTED FOR WM   ' WS-NBR2.

       0600-ADJUST-FOR-HOSP.
           MOVE WS-WRITE-9-CNT                 TO WS-HOLD-RCD-CNT.
           IF WS-HOLD-RCD-CNT < WS-NBR2
             IF WS-HOLD-RCD-CNT < WS-NBR1
                 COMPUTE WS-DIFF = WS-NBR1 - WS-HOLD-RCD-CNT
                 IF WS-DIFF > 6
                     CONTINUE
                 ELSE
                     COMPUTE WS-NBR1 = WS-HOLD-RCD-CNT
                     DISPLAY '**** NBR1 ADJUSTED FOR HOSP ' WS-NBR1
             ELSE
                 COMPUTE WS-DIFF = WS-NBR2 - WS-HOLD-RCD-CNT
                 IF WS-DIFF > 6
                     CONTINUE
                 ELSE
                     COMPUTE WS-NBR2 = WS-HOLD-RCD-CNT - WS-NBR1
                     DISPLAY '**** NBR2 ADJUSTED FOR HOSP ' WS-NBR2.

       0650-SEARCH-ADHOCS.
           IF INFILE-RPT = WS-ADHOC(WS-SUB1)
               MOVE 'Y'                       TO WS-ADHOC-SW
               MOVE WS-LONG(WS-SUB1)          TO WS-LONG-VAL
               MOVE WS-JOB(WS-SUB1)           TO WS-JOB-VAL
               MOVE WS-DY-WM(WS-SUB1)         TO WS-DY-WM-VAL.

       0700-LAST-HEADERS.
           IF WS-WRITE-9B-CNT = ZERO
               WRITE OUT9B-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-9C-CNT = ZERO
               WRITE OUT9C-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-9D-CNT = ZERO
               WRITE OUT9D-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-ZA-CNT = ZERO
               WRITE OUTZA-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-ZB-CNT = ZERO
               WRITE OUTZB-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-ZC-CNT = ZERO
               WRITE OUTZC-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-WA-CNT = ZERO
               WRITE OUTWA-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-WB-CNT = ZERO
               WRITE OUTWB-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-WC-CNT = ZERO
               WRITE OUTWC-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-SA-CNT = ZERO
               WRITE OUTSA-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-SB-CNT = ZERO
               WRITE OUTSB-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-SC-CNT = ZERO
               WRITE OUTSC-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-FA-CNT = ZERO
               WRITE OUTFA-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-MA-CNT = ZERO
               WRITE OUTMA-RECORD FROM WS-HOLD-HDR.
           IF WS-WRITE-AA-CNT = ZERO
               WRITE OUTAA-RECORD FROM WS-HOLD-HDR.

       1200-WRITE-OUT9A.
           IF WS-HD9A-SW = 'Y'
               MOVE SPACE                     TO WS-HD9A-SW
               WRITE OUT9A-RECORD FROM WS-HOLD-HDR.
           WRITE OUT9A-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUT9A'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1200                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-9A-CNT
               ADD 1                          TO WS-WRITE-9-CNT.

       1300-WRITE-OUT9B.
           IF WS-HD9B-SW = 'Y'
               MOVE SPACE                     TO WS-HD9B-SW
               WRITE OUT9B-RECORD FROM WS-HOLD-HDR.
           WRITE OUT9B-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUT9B'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1300                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-9B-CNT
               ADD 1                          TO WS-WRITE-9-CNT.

       1400-WRITE-OUT9C.
           IF WS-HD9C-SW = 'Y'
               MOVE SPACE                     TO WS-HD9C-SW
               WRITE OUT9C-RECORD FROM WS-HOLD-HDR.
           WRITE OUT9C-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUT9C'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1400                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-9C-CNT
               ADD 1                          TO WS-WRITE-9-CNT.

       1400-WRITE-OUT9D.
           IF WS-HD9D-SW = 'Y'
               MOVE SPACE                     TO WS-HD9D-SW
               WRITE OUT9D-RECORD FROM WS-HOLD-HDR.
           WRITE OUT9D-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUT9D'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1400                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-9D-CNT.

       1500-HANDLE-Z-ADHOCS.
           IF WS-JOB-VAL = SPACE
             IF INFILE-RPT(3: 3) NOT = 'PXZ'
                 IF INFILE-CNT = '1'
                     MOVE 'A6T/A7D/A8A '      TO WS-MOVED
                     PERFORM 1600-CREATE-NOTIFY
                         VARYING WS-SUB2 FROM 1 BY 1
                         UNTIL WS-SUB2 > 20.
           IF WS-WRITE-Z-CNT NOT < WS-NBR-Z2
               PERFORM 1500-WRITE-OUTZC
           ELSE
           IF WS-WRITE-Z-CNT NOT < WS-NBR-Z1
               PERFORM 1500-WRITE-OUTZB
           ELSE
               PERFORM 1500-WRITE-OUTZA.

       1500-WRITE-OUTZA.
           IF WS-HDZA-SW = 'Y'
               MOVE SPACE                     TO WS-HDZA-SW
               WRITE OUTZA-RECORD FROM WS-HOLD-HDR.
           WRITE OUTZA-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTZA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-ZA-CNT
               ADD 1                          TO WS-WRITE-Z-CNT.

       1500-WRITE-OUTZB.
           IF WS-HDZB-SW = 'Y'
               MOVE SPACE                     TO WS-HDZB-SW
               WRITE OUTZB-RECORD FROM WS-HOLD-HDR.
           WRITE OUTZB-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTZB'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-ZB-CNT
               ADD 1                          TO WS-WRITE-Z-CNT.

       1500-WRITE-OUTZC.
           IF WS-HDZC-SW = 'Y'
               MOVE SPACE                     TO WS-HDZC-SW
               WRITE OUTZC-RECORD FROM WS-HOLD-HDR.
           WRITE OUTZC-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTZC'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-ZC-CNT
               ADD 1                          TO WS-WRITE-Z-CNT.

       1500-HANDLE-W-ADHOCS.
           IF WS-JOB-VAL = SPACE
             IF INFILE-RPT(3: 3) NOT = 'PXZ'
                 IF INFILE-CNT = '1'
                     MOVE 'PXADHA7W'          TO WS-MOVED
                     PERFORM 1600-CREATE-NOTIFY
                         VARYING WS-SUB2 FROM 1 BY 1
                         UNTIL WS-SUB2 > 20.
           IF WS-WRITE-W-CNT NOT < WS-NBR-W2
               PERFORM 1500-WRITE-OUTWC
           ELSE
           IF WS-WRITE-W-CNT NOT < WS-NBR-W1
               PERFORM 1500-WRITE-OUTWB
           ELSE
               PERFORM 1500-WRITE-OUTWA.

       1500-WRITE-OUTWA.
           IF WS-HDWA-SW = 'Y'
               MOVE SPACE                     TO WS-HDWA-SW
               WRITE OUTWA-RECORD FROM WS-HOLD-HDR.
           WRITE OUTWA-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTWA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-WA-CNT
               ADD 1                          TO WS-WRITE-W-CNT.

       1500-WRITE-OUTWB.
           IF WS-HDWB-SW = 'Y'
               MOVE SPACE                     TO WS-HDWB-SW
               WRITE OUTWB-RECORD FROM WS-HOLD-HDR.
           WRITE OUTWB-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTWB'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-WB-CNT
               ADD 1                          TO WS-WRITE-W-CNT.

       1500-WRITE-OUTWC.
           IF WS-HDWC-SW = 'Y'
               MOVE SPACE                     TO WS-HDWC-SW
               WRITE OUTWC-RECORD FROM WS-HOLD-HDR.
           WRITE OUTWC-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTWC'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-WC-CNT
               ADD 1                          TO WS-WRITE-W-CNT.

       1500-HANDLE-S-ADHOCS.
           IF WS-JOB-VAL = SPACE
             IF INFILE-RPT(3: 3) NOT = 'PXZ'
                 IF INFILE-CNT = '1'
                     MOVE 'PXADHA7S'          TO WS-MOVED
                     PERFORM 1600-CREATE-NOTIFY
                         VARYING WS-SUB2 FROM 1 BY 1
                         UNTIL WS-SUB2 > 20.
           IF WS-WRITE-S-CNT NOT < WS-NBR-S2
               PERFORM 1500-WRITE-OUTSC
           ELSE
           IF WS-WRITE-S-CNT NOT < WS-NBR-S1
               PERFORM 1500-WRITE-OUTSB
           ELSE
               PERFORM 1500-WRITE-OUTSA.

       1500-WRITE-OUTSA.
           IF WS-HDSA-SW = 'Y'
               MOVE SPACE                     TO WS-HDSA-SW
               WRITE OUTSA-RECORD FROM WS-HOLD-HDR.
           WRITE OUTSA-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTSA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-SA-CNT
               ADD 1                          TO WS-WRITE-S-CNT.

       1500-WRITE-OUTSB.
           IF WS-HDSB-SW = 'Y'
               MOVE SPACE                     TO WS-HDSB-SW
               WRITE OUTSB-RECORD FROM WS-HOLD-HDR.
           WRITE OUTSB-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTSB'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-SB-CNT
               ADD 1                          TO WS-WRITE-S-CNT.

       1500-WRITE-OUTSC.
           IF WS-HDSC-SW = 'Y'
               MOVE SPACE                     TO WS-HDSC-SW
               WRITE OUTSC-RECORD FROM WS-HOLD-HDR.
           WRITE OUTSC-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTSC'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-SC-CNT
               ADD 1                          TO WS-WRITE-S-CNT.

       1500-HANDLE-F-ADHOCS.
           IF WS-JOB-VAL = SPACE
             IF INFILE-RPT(3: 3) NOT = 'PXZ'
                 IF INFILE-CNT = '1'
                     MOVE 'PXADHA7F'          TO WS-MOVED
                     PERFORM 1600-CREATE-NOTIFY
                         VARYING WS-SUB2 FROM 1 BY 1
                         UNTIL WS-SUB2 > 20.
           PERFORM 1500-WRITE-OUTFA.

       1500-WRITE-OUTFA.
           IF WS-HDFA-SW = 'Y'
               MOVE SPACE                     TO WS-HDFA-SW
               WRITE OUTFA-RECORD FROM WS-HOLD-HDR.
           WRITE OUTFA-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTFA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-FA-CNT.

       1500-HANDLE-M-ADHOCS.
           IF WS-JOB-VAL = SPACE
             IF INFILE-RPT(3: 3) NOT = 'PXZ'
                 IF INFILE-CNT = '1'
                     MOVE 'PXADHA7M'          TO WS-MOVED
                     PERFORM 1600-CREATE-NOTIFY
                         VARYING WS-SUB2 FROM 1 BY 1
                         UNTIL WS-SUB2 > 20.
           PERFORM 1500-WRITE-OUTMA.

       1500-WRITE-OUTMA.
           IF WS-HDMA-SW = 'Y'
               MOVE SPACE                     TO WS-HDMA-SW
               WRITE OUTMA-RECORD FROM WS-HOLD-HDR.
           WRITE OUTMA-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTMA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-MA-CNT.

       1500-HANDLE-A-ADHOCS.
           IF WS-JOB-VAL = SPACE
             IF INFILE-RPT(3: 3) NOT = 'PXZ'
                 IF INFILE-CNT = '1'
                     MOVE 'PXADHA8A'          TO WS-MOVED
                     PERFORM 1600-CREATE-NOTIFY
                         VARYING WS-SUB2 FROM 1 BY 1
                         UNTIL WS-SUB2 > 20.
           PERFORM 1500-WRITE-OUTAA.

       1500-WRITE-OUTAA.
           IF WS-HDAA-SW = 'Y'
               MOVE SPACE                     TO WS-HDAA-SW
               WRITE OUTAA-RECORD FROM WS-HOLD-HDR.
           WRITE OUTAA-RECORD FROM INFILE-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON OUTAA'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1500                     TO WS-RETURN-CODE.

           IF WS-2ND-SW = SPACE
               MOVE 'Y'                       TO WS-2ND-SW
           ELSE
               MOVE SPACE                     TO WS-2ND-SW
               ADD 1                          TO WS-ADHOC-CNT
               ADD 1                          TO WS-WRITE-AA-CNT.

       1600-CREATE-NOTIFY.
           IF WS-USERID(WS-SUB2) = SPACE
               MOVE 20                        TO WS-SUB2
           ELSE
               MOVE 'SE '                     TO NOTIF01-SE
               MOVE QUOTE                     TO NOTIF01-QUOTE1
               MOVE SPACE                     TO NOTIF01-FILL1
               MOVE SPACE                     TO NOTIF01-MSG
               STRING WS-1-CYMD-MM '-' WS-1-CYMD-DD '-'
                          WS-1-CYMD-YY '  ' INFILE-RPT
                          ' MOVED TO ' WS-MOVED
                          DELIMITED BY SIZE INTO NOTIF01-MSG
               MOVE SPACE                     TO NOTIF01-FILL2
               MOVE QUOTE                     TO NOTIF01-QUOTE2
               MOVE SPACE                     TO NOTIF01-REMAIN
               STRING ' U('                   DELIMITED BY SIZE
                      WS-USERID(WS-SUB2)      DELIMITED BY ' '
                      ') LOGON'               DELIMITED BY SIZE
                      INTO NOTIF01-REMAIN
               PERFORM 1700-WRITE-NOTIF01.

       1700-WRITE-NOTIF01.
           WRITE NOTIF01-RECORD.
           IF WS-STAT > ZERO
               DISPLAY '**** MIS0515B WRITE ERROR ON NOTIF01'
               DISPLAY '**** FILE STAT = ' WS-STAT
               MOVE +1700                     TO WS-RETURN-CODE.
           ADD 1                              TO WS-NOTIF01-CNT.

      ************************************ END MIS0515B
